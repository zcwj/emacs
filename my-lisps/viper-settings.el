(require 'viper)
;;in viper mode & some other modes,use z as my custom command prefix.
(defvar *viper-basic-mode-z-based-maps* nil)
(setq *viper-basic-mode-z-based-maps*
        `(
          ("0" delete-window)
          ("1" delete-other-windows)
          ("2" split-window-vertically)
          ("b" ido-switch-buffer)
          ("c" comment-region)
          ("u" uncomment-region)

          ("f" ido-find-file)
          ("i" my-insert)
          ("j" idomenu)
          ("k" kill-current-buffer)

          ("A" org-agenda)
          ("D" kid-cl-speaker)
          ("S" my-save-buffers)
          ("N" tabbar-forward-group)
          ("P" tabbar-backward-group)
          ("Q" save-buffers-kill-terminal)
          ))
(defmacro apply-viper-z-map (&rest body)
  `(loop for (char action) in *viper-basic-mode-z-based-maps*
      do ,@body))
(defmacro apply-viper-z-keymap (map-name)
  `(loop for (char action) in *viper-basic-mode-z-based-maps*
      do (ignore-errors (define-key ,map-name (concat "z" char) action))))

(with-my-hook 'org-mode-hook
  (org-defkey org-agenda-mode-map "z" nil)
  ;; map original key "z" to "zz" in org agenda mode.
  (org-defkey org-agenda-mode-map "zz" 'org-agenda-add-note)
  (apply-viper-z-map (org-defkey org-agenda-mode-map (concat "z" char) action)))

(define-key viper-vi-basic-map "z" nil) ; delete `viper-nil' binding
(apply-viper-z-keymap viper-vi-basic-map)
;; use ze as external & enlish invoke
("ec" my-external-program)
("eb" my-bash-shell)
("ed" kid-star-dict)
("eD" kid-sdcv-to-buffer)
("em" compile)
("ep" my-plink)
("es" dos-shell)
 ;;use zd as dired invoke.
("db" my-dired-buffers)
("dj" dired-jump)
("df" my-traverse-deep-rfind)
("dg" my-dired-go)
("do" dired-jump)
 ;;use w as w3m prefix
("wb" my-w3m-buffers)
("ws" w3m-browse-url-new-session)
("wq" my-google-search)
("wg" w3m-browse-url)
;; use zg as org-mode prefix
("g " org-table-edit-field)
("ga" my-org-agenda-buffer)
("gA" org-agenda)
("gb" org-switchb)
("gcd" org-clock-mark-default-task)
("gci" my-org-clock-in)
("gco" org-clock-out)
("gcj" my-org-clock-goto)
("gcJ" my-org-recent-clock)
("gC" org-columns)
("ge" org-set-effort)
("gE" org-clock-modify-effort-estimate)
("gd" org-decrypt-entry)
("gl" org-store-link)
("gg" org-ctrl-c-ctrl-c)
("gi" org-insert-link)
("go" org-open-at-point)
("gr" org-remember)
("gs" org-schedule)
("gS" org-archive-to-archive-sibling);org-advertized-archive-subtree
("gt" org-todo)
("gT" tea-time)
("gu" org-update-statistics-cookies)
("gp" links)
 ;;use m as my prefix
("mb" bookmark-set)
("md" my-sql-pool)
("mD" diff-buffer-with-file)
("mc" calendar)
("me" emms)
("mf" my-bookmark-jump-via-ido)
("mh" highlight-regexp)
("mH" hi-lock-unface-buffer)
("mj" my-bookmark-jump-via-ido)
("ml" w3m-external-view-this-url)
("mL" my-browser-url)
("mk" browse-kill-ring)
("mm" my-favorite-menubar)
("mn" my-rss)
("mo" find-file-at-point)
("mp" my-plink)
("mt" xjt-create/switch-scratch)
("ms" find-file-recursively)
("mv" my-virsh)
("my" my-eye-save)
("n" tabbar-forward-tab)
("p" tabbar-backward-tab)
("q" my-w3m-google-search)
("o" other-window)
("r" ido-recentf-open)
("s" save-buffer)
;; use h as help
("ha" apropos)
("hf" describe-function)
("hv" describe-variable
;; use zv as version control prefix
 ("vd" my-ediff-revision)
 ("vD" ediff-revision)
 ("vm" magit-status)
 ("vv" vc-next-action)
 (setq my-cc-modified-vi-map
       (let ((map (make-sparse-keymap)))
	 (viper-special-defkey map "b" 'semantic-ia-fast-jump-back)
	 (viper-special-defkey map "df" 'my-cc-function-header)
	 (viper-special-defkey map "dc" 'my-cc-variable-header)
	 (viper-special-defkey map "dv" 'my-cc-variable-header)
	 (viper-special-defkey map "f" 'my-toggle-selective-display)
	 ;; (viper-special-defkey map "fa" 'semantic-tag-folding-fold-all)
	 ;; (viper-special-defkey map "fi" 'semantic-tag-folding-fold-block)
	 ;; (viper-special-defkey map "fo" 'semantic-tag-folding-show-block)
	 ;; (viper-special-defkey map "ft" 'global-semantic-tag-folding-mode)
	 ;; (viper-special-defkey map "fu" 'semantic-tag-folding-show-all)
	 (viper-special-defkey map "g" 'proj-gtags)
	 (viper-special-defkey map "h" 'sourcepair-load);c-open-relational-file
	 (viper-special-defkey map "i" 'semantic-analyze-proto-impl-toggle)
	 (viper-special-defkey map "j" 'my-gtags-find-tag)
	 (viper-special-defkey map "eg" 'next-error)
	 (viper-special-defkey map "mc" 'viss-bookmark-clear-all-buffer)
	 (viper-special-defkey map "mi" 'viss-bookmark-toggle)
	 (viper-special-defkey map "mt" 'viss-bookmark-toggle)
	 (viper-special-defkey map "mo" 'viss-bookmark-toggle)
	 (viper-special-defkey map "mp" 'viss-bookmark-prev-buffer)
	 (viper-special-defkey map "mn" 'viss-bookmark-next-buffer)
	 (viper-special-defkey map "sa" 'cscope-set-initial-directory)
	 (viper-special-defkey map "sc" 'cscope-find-functions-calling-this-function)
	 (viper-special-defkey map "sC" 'cscope-find-called-functions)
	 (viper-special-defkey map "sf" 'cscope-find-this-file)
	 (viper-special-defkey map "sg" 'cscope-find-global-definition-no-prompting)
	 (viper-special-defkey map "sG" 'cscope-find-global-definition)
	 (viper-special-defkey map "si" 'cscope-find-files-including-file)
	 (viper-special-defkey map "sI" 'cscope-index-files)
	 (viper-special-defkey map "ss" 'cscope-find-this-symbol)
	 (viper-special-defkey map "su" 'cscope-pop-mark)
	 (viper-special-defkey map ";" 'c-toggle-auto-newline)
	 map))
 (viper-modify-major-mode 'c-mode 'vi-state my-cc-modified-vi-map)
 (viper-modify-major-mode 'c++-mode 'vi-state my-cc-modified-vi-map)

